name: CI

on: [push, pull_request]

jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:

          - name: Coverage test in Python 3
            os: ubuntu-latest
            python: '3.11'
            toxenv: py311-poppydev-pysiafdev-cov

          - name: Check for Sphinx doc build errors
            os: ubuntu-latest
            python: 3.9
            toxenv: docbuild

          - name: Try Astropy development version
            os: ubuntu-latest
            python: 3.9
            toxenv: py39-astropydev-test

          - name: Try latest versions of all dependencies
            os: ubuntu-latest
            python: '3.11'
            toxenv: py311-latest-test

          - name: Try minimum supported versions
            os: ubuntu-latest
            python: 3.9
            toxenv: py39-legacy-test

          - name: Try released POPPY and PySIAF
            os: ubuntu-latest
            python: 3.9
            toxenv: py39-stable-test
            continue-on-error: 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python }}

    - name: Install Python dependencies
      run: pip install tox tox-conda>=0.2

    - name: Get WebbPSF Data
      run: | # Get WebbPSF data files (just a subset of the full dataset!) and set up environment variable
           wget https://stsci.box.com/shared/static/0ojjfg3cieqdpd18vl1bjnpe63r82dx8.gz -O /tmp/minimal-webbpsf-data.tar.gz
           tar -xzvf /tmp/minimal-webbpsf-data.tar.gz
           echo "WEBBPSF_PATH=${{github.workspace}}/webbpsf-data" >> $GITHUB_ENV

    - name: Check conda info
      run: conda info

    - name: Run tests with requirements file
      if: ${{ contains(matrix.toxenv,'-latest') }}
      run: |
        cp $RUNNER_WORKSPACE/webbpsf/requirements.txt /tmp/
        tox -e ${{ matrix.toxenv }}

    - name: Run tests
      if: ${{ matrix.continue-on-error == null && contains(matrix.toxenv,'-latest') != true }}
      run: tox -e ${{ matrix.toxenv }}

    - name: Run tests and allow failures
      if: matrix.continue-on-error
      continue-on-error: true
      run: tox -e ${{ matrix.toxenv }}

    - name: Upload coverage to codecov
      if: ${{ contains(matrix.toxenv,'-cov') }}
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
